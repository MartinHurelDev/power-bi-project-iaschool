#2.4.2 + calcul à faire
only_veggies_ratio <- only_veggies_ratio %>% mutate(kcal_on_veggies_capita = only_veggies_ratio$dispo_cal/only_veggies_ratio$population)
only_veggies_ratio <- only_veggies_ratio %>% mutate(protein_from_veggies_capita=only_veggies_ratio$dispo_protein/only_veggies_ratio$population)
only_veggies_ratio <- only_veggies_ratio %>% mutate(pourcentage_de_gens_kcal = kcal_on_veggies_capita/365/2000*100)
only_veggies_ratio <- only_veggies_ratio %>% mutate(pourcentage_de_gens_protein = protein_from_veggies_capita*1000/365/40*100)
#no waste
pivot <- pivot %>% mutate(all_to_food=Food+Feed+Losses)
#2.4.3
dispos_no_waste <-  pivot[!is.na(pivot$Food) & !is.na(pivot$Feed) & !is.na(pivot$Losses),] %>% group_by(Year)  %>% summarise(dispo_protein = sum(all_to_food*1000000*protein_ratio) ,dispo_cal=sum(all_to_food*1000000*calories_kg))
dispos_no_waste <- left_join(x=dispos_no_waste,y=ppl_year, by="Year" )
names(dispos_no_waste)[names(dispos_no_waste) == "avg"] <- "population_size"
dispos_no_waste <- dispos_no_waste %>% mutate(population_nourrie_kcal_p=dispo_cal/population_size/365/2000*100)
dispos_no_waste <- dispos_no_waste %>% mutate(population_nourrie_kcal_prct=dispo_protein/population_size*1000/365/45*100)
shiny::runApp()
View(pivot)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(prot)
runApp()
ggplot(prot, aes(x=protein_ratio),environment = environment()) + geom_histogram()
runApp()
runApp()
# dataset =  prot
output$TableGg <- renderPlot({
ggplot(prot, aes(x=protein_ratio),environment = environment()) + geom_histogram()
})
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(prot, aes(x=protein_ratio)) + geom_histogram()
runApp()
runApp()
runApp()
runApp()
runApp()
vegetal$origin="vegetal"
animal$origin="animal"
All_products <<- rbind(vegetal,animal)
# population mondiale
population_table_tmp <- population[!(population$`Area Code` %in% c(41,96,214,128)),]
population_table <- population_table_tmp %>% select(Area,`Area Code`,Value,Year)
population_table$Value <- population_table$Value*1000
#Country Initialization
countryInit <<- population_table %>% select(Area)
products <<- All_products[,!names(All_products) %in% c("Domain Code","Domain")]
#pivoted = partout !!!!
pivoted_table <<- tidyr::pivot_wider(products,id_cols=c("Area Code","Area","Year","Item Code","Item","origin"),names_from= "Element",values_from = Value)
cereals <<- cereals[,!names(cereals) %in% c("Domain Code","Domain")]
codes <<- cereals %>% distinct(`Item Code`)
#2.1.1 & 2.2.1
pivoted_table <<- pivoted_table %>% mutate(is_cereal = `Item Code` %in% pull(codes))
#2.1.1
Cereal_consumption <<- pivoted_table %>% filter(is_cereal == TRUE)
feed_sum <- sum(Cereal_consumption$Feed,na.rm = TRUE)
#2.1.2
Cereal_percent <- feed_sum/(sum(Cereal_consumption$Food,na.rm = TRUE)+feed_sum)
populations <- population_table %>% select(`Area Code`,Year,Value)
clean_data()
# création de la table pivot
vegetal$origin="vegetal"
animal$origin="animal"
All_products <<- rbind(vegetal,animal)
# population mondiale
population_table_tmp <- population[!(population$`Area Code` %in% c(41,96,214,128)),]
population_table <- population_table_tmp %>% select(Area,`Area Code`,Value,Year)
population_table$Value <- population_table$Value*1000
#Country Initialization
countryInit <<- population_table %>% select(Area)
products <<- All_products[,!names(All_products) %in% c("Domain Code","Domain")]
#pivoted = partout !!!!
pivoted_table <<- tidyr::pivot_wider(products,id_cols=c("Area Code","Area","Year","Item Code","Item","origin"),names_from= "Element",values_from = Value)
cereals <<- cereals[,!names(cereals) %in% c("Domain Code","Domain")]
codes <<- cereals %>% distinct(`Item Code`)
#2.1.1 & 2.2.1
pivoted_table <<- pivoted_table %>% mutate(is_cereal = `Item Code` %in% pull(codes))
#2.1.1
Cereal_consumption <<- pivoted_table %>% filter(is_cereal == TRUE)
feed_sum <- sum(Cereal_consumption$Feed,na.rm = TRUE)
#2.1.2
Cereal_percent <- feed_sum/(sum(Cereal_consumption$Food,na.rm = TRUE)+feed_sum)
populations <- population_table %>% select(`Area Code`,Year,Value)
#merge population with main table
pivot_new <- pivoted_table[!(pivoted_table$`Area Code` %in% c(41,96,214,128)),]
pivot_new <- left_join(x=pivot_new,y=populations,by=c("Area Code","Year"))
pivot <- pivot_new[( (pivot_new$Food > 0)  & (pivot_new$`Food supply quantity (kg/capita/yr)` != 0)  & (pivot_new$`Food supply (kcal/capita/day)` != 0) & !is.na(pivot_new$`Food supply (kcal/capita/day)`) & (!is.na(pivot_new$`Food supply quantity (kg/capita/yr)`)) ),]
pivot <- pivot %>% mutate(kg_capita_day = pivot$`Food supply quantity (kg/capita/yr)`/365 )
pivot <- pivot %>% mutate(kcal_for_kg= pivot$`Food supply (kcal/capita/day)`/pivot$kg_capita_day)
# les plus caloriques
#2.3.1
calories <- pivot %>% group_by(Item,`Item Code`,Area)  %>% summarise(cal = mean(kcal_for_kg))
#2.2.2 ratio??? à calculer???? faite votre travail !!!
cal <<- calories %>% filter(cal < 10000) %>% group_by(Item) %>% summarise(cal = mean(cal))
pivot <-left_join(x=pivot,y=cal,by=c("Item"))
pivot$kcal_for_kg <- NULL
#rename columns
names(pivot)[names(pivot) == "cal"] <- "calories_kg"
names(pivot)[names(pivot) == "Value"] <- "population_size"
# les plus protéinés
#2.2.3 manque ratio par pays
prot <- pivot %>% group_by(Item,Area) %>% summarise(protein_ratio = `Protein supply quantity (g/capita/day)`/(kg_capita_day*1000) )
prot <- prot %>% filter(protein_ratio < .42)
prot <- prot %>% group_by(Item) %>% summarise(protein_ratio = mean(protein_ratio)) %>% arrange(desc(protein_ratio))
pivot <- left_join(x=pivot,y=prot,by="Item")
# disponibilité mondiale en végéteaux
#2.4.1
dispos_veggies <<- pivot %>% filter(origin == "vegetal") %>% group_by(Year)  %>% summarise(dispo_protein = sum(Food*1000000*protein_ratio) ,dispo_cal=sum(Food*1000000*calories_kg))
ppl_year <- population_table %>% group_by(Year) %>% summarise(avg = sum(Value))
only_veggies_ratio <- left_join(x=dispos_veggies,y=ppl_year, by="Year" )
names(only_veggies_ratio)[names(only_veggies_ratio) == "avg"] <- "population"
#2.4.2 + calcul à faire
only_veggies_ratio <- only_veggies_ratio %>% mutate(kcal_on_veggies_capita = only_veggies_ratio$dispo_cal/only_veggies_ratio$population)
only_veggies_ratio <- only_veggies_ratio %>% mutate(protein_from_veggies_capita=only_veggies_ratio$dispo_protein/only_veggies_ratio$population)
only_veggies_ratio <- only_veggies_ratio %>% mutate(pourcentage_de_gens_kcal = kcal_on_veggies_capita/365/2000*100)
only_veggies_ratio <- only_veggies_ratio %>% mutate(pourcentage_de_gens_protein = protein_from_veggies_capita*1000/365/40*100)
only_veggies_ratio_final <<- only_veggies_ratio
#no waste
pivot <- pivot %>% mutate(all_to_food=Food+Feed+Losses)
pivot_final <<- pivot
#2.4.3
dispos_no_waste <-  pivot[!is.na(pivot$Food) & !is.na(pivot$Feed) & !is.na(pivot$Losses),] %>% group_by(Year) %>% summarise(dispo_protein = sum(all_to_food*1000000*protein_ratio) ,dispo_cal=sum(all_to_food*1000000*calories_kg))
dispos_no_waste <- left_join(x=dispos_no_waste,y=ppl_year, by="Year" )
names(dispos_no_waste)[names(dispos_no_waste) == "avg"] <- "population_size"
dispos_no_waste <- dispos_no_waste %>% mutate(population_nourrie_kcal_p=dispo_cal/population_size/365/2000*100)
dispos_no_waste <- dispos_no_waste %>% mutate(population_nourrie_kcal_prct=dispo_protein/population_size*1000/365/45*100)
dispos_no_waste_final <<- dispos_no_waste
# 2.2.4
# alim_for_all <- pivot[!is.na(pivot$Losses),]
# alim_for_all <- alim_for_all[!is.na(alim_for_all$calories_kg),]
# alim_for_all <- alim_for_all[!is.na(alim_for_all$Food),]  %>% group_by(Year.x) %>% summarise(disp_food = sum((Food*1000000-Losses*1000000)*calories_kg))
# alim_for_all <- alim_for_all %>% rename(Year=Year.x)
# evo_poppulation <- population_table %>% group_by(Year) %>% summarise(capital = sum(Value))
#
# alim_for_all_by_capital <-  merge(alim_for_all,evo_poppulation,by.x='Year')
# alim_for_all_by_capital <-  alim_for_all_by_capital %>% mutate(disp_food_for_human = capital*2100*365)
# alim_for_all_by_capital <-  alim_for_all_by_capital %>% mutate(percent = disp_food/disp_food_for_human)
####3.1
undernutrition_ratio <- read.csv("data_fao/undernourishment.csv")
undernutrition_ratio$ratios <- undernutrition_ratio$Suite.of.Food.Security.Indicators...Prevalence.of.undernourishment..percent...3.year.average....210041...Value...6121....
undernutrition_ratio <- undernutrition_ratio %>% filter(Year<2018 & Year>2013) %>% group_by(Year,Entity) %>% summarise(ratio = mean(ratios))
total_ratio_undernutrition <- undernutrition_ratio %>% summarise(total_population=mean(ratio))
total_ratio_undernutrition_final <<- total_ratio_undernutrition
###3.2
undernutrition_numbers <- read.csv("data_fao/undernutrition.csv")
undernutrition_numbers$Value <- as.numeric(undernutrition_numbers$Value)
undernutrition_numbers <- undernutrition_numbers %>% filter(Flag == "F" &  Year == "2013-2015") %>% group_by(Year,Area,Unit) %>% summarise(people = sum(Value)) %>% arrange(desc(people))
undernutrition_numbers_final <<- undernutrition_numbers
#3.3?
export_products <- pivot[!is.na(pivot$`Export Quantity`),] %>% select(Item,`Export Quantity`)%>%group_by(Item) %>% summarise(quantity = sum(`Export Quantity`)) %>% arrange(desc(quantity)) %>% head(15)
export_products_final <<- export_products
# 3.4
importations <- pivot[!is.na(pivot$`Import Quantity`),] %>% select(Year,Area,Item,origin,`Import Quantity`) %>%  arrange(desc(`Import Quantity`)) %>% head(200)
importations_final <<- importations
#3.5
importation_ratio_1 <- pivot[ !is.na(pivot$`Other uses (non-food)`) & !is.na(pivot$`Domestic supply quantity`),] %>%
filter(`Domestic supply quantity` != 0 & `Other uses (non-food)` !=0) %>% group_by(Item) %>%
summarise(ouses_disp = mean( `Other uses (non-food)`/(`Other uses (non-food)`+`Domestic supply quantity`)),) %>%
filter(ouses_disp < 1) %>%
arrange(desc(ouses_disp)) %>% head(15)
importation_ratio_2 <- pivot[ !is.na(pivot$Food) & !is.na(pivot$Feed),] %>%
filter(Food != 0 & Feed !=0) %>% group_by(Item) %>%
summarise(feed_food = mean( Feed/(Feed+Food)),) %>%
filter(feed_food < 1) %>%
arrange(desc(feed_food)) %>% head(15)
importation_ratio_1_final <<- importation_ratio_1
importation_ratio_2_final <<- importation_ratio_2
#3.6
importation_ratio_ouses_disp_3 <- importation_ratio_1 %>% head(3)
importation_ratio_food_feed_3 <- importation_ratio_2 %>% head(3)
importation_ratio_ouses_disp_3_final <<- importation_ratio_ouses_disp_3
importation_ratio_food_feed_3_final <<- importation_ratio_food_feed_3
importData()
clean_data()
insertDatabase()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
View(prot)
ggplot(data = prot, aes(x=protein_ratio),environment = environment()) + geom_histogram()
runApp()
runApp()
ggplot(data = prot, aes(y=protein_ratio)) + geom_histogram()
runApp()
runApp()
ggplot(pivot,aes(origin,calories_kg,fill=origin)) + geom_violin()
runApp()
})
ggplot(pivot_final,aes(origin,calories_kg,fill=origin)) + geom_violin()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
qplot(x=group, y=mean, fill=variable,
data=means, geom="bar", stat="identity",
position="dodge")
View(only_veggies_ratio_final)
qplot(data =only_veggies_ratio_final, aes(x=Year, y=pourcentage_de_gens_kcal*population/100), fill=variable,
data=means, geom="bar", stat="identity",
position="dodge")
qplot(only_veggies_ratio_final, aes(x=Year, y=pourcentage_de_gens_kcal*population/100), fill=variable,
data=means, geom="bar", stat="identity",
position="dodge")
qplot(data=only_veggies_ratio_final, aes(x=Year, y=pourcentage_de_gens_kcal*population/100), fill=variable,
geom="bar", stat="identity",
position="dodge")
output$Table21 <- renderPlot({
qplot(data=only_veggies_ratio_final, aes(x=Year, y=pourcentage_de_gens_kcal*population/100),
geom="bar", stat="identity",
position="dodge")
qplot(data=only_veggies_ratio_final, aes(x=Year, y=pourcentage_de_gens_kcal*population/100),
geom="bar", stat="identity",
position="dodge")
qplot(data=only_veggies_ratio_final, aes(x=Year, y=pourcentage_de_gens_kcal*population/100),
geom="bar", stat="identity")
ggplot(data=only_veggies_ratio_final, aes(x=Year, y=pourcentage_de_gens_kcal*population/100),
geom="bar", stat="identity")
ggplot(only_veggies_ratio_final, aes(x=Year, y=pourcentage_de_gens_kcal*population/100),
geom="bar", stat="identity")
ggplot(only_veggies_ratio_final, aes(x=Year, y=pourcentage_de_gens_kcal*population/100)) + geom(stat="identity")
View(only_veggies_ratio_final)
ggplot(only_veggies_ratio_final, aes(x=Year, y=`pourcentage_de_gens_kcal`*`population`/100)) + geom(stat="identity")
ggplot(only_veggies_ratio_final, aes(x=Year, y=pourcentage_de_gens_kcal)) + geom(stat="identity")
ggplot(pivot_final,aes(origin,calories_kg,fill=origin)) + geom_violin()
ggplot(only_veggies_ratio_final, aes(x=Year, y=pourcentage_de_gens_kcal)) + geom(stat="identity")
ggplot(pivot_final,aes(origin,calories_kg,fill=origin)) + geom_violin()
runApp()
runApp()
shiny::runApp()
ggplot(pivot_final,aes(origin,calories_kg,fill=origin)) + geom_violin()
ggplot(only_veggies_ratio_final, aes(x=Year, y=pourcentage_de_gens_kcal)) + geom(stat="identity")
ggplot(only_veggies_ratio_final, aes(x=Year, y=pourcentage_de_gens_kcal)) + geom_bar(stat="identity")
ggplot(only_veggies_ratio_final, aes(x=Year, y=pourcentage_de_gens_kcal*population/100)) + geom_bar(stat="identity")
ggplot(only_veggies_ratio_fina, aes(x = "", y=pourcentage_de_gens_kcal*population/100, fill = factor(year))) +
geom_bar(width = 1, stat = "identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: mpg")
ggplot(only_veggies_ratio_final, aes(x = "", y=pourcentage_de_gens_kcal*population/100, fill = factor(year))) +
geom_bar(width = 1, stat = "identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: mpg")
ggplot(only_veggies_ratio_final, aes(x = "", y=pourcentage_de_gens_kcal*population/100, fill = factor(Year))) +
geom_bar(width = 1, stat = "identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: mpg")
ggplot(only_veggies_ratio_final, aes(x = "", y=pourcentage_de_gens_kcal*population/100, fill = factor(Year))) +
geom_bar(width = 1, stat = "identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: mpg")  + coord_polar(theta = "y", start=0)
})
ggplot(only_veggies_ratio_final, aes(x = "", fill=factor(pourcentage_de_gens_kcal*population/100))) +
geom_bar(width = 1, stat = "identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: mpg")  +
coord_polar(theta = "y", start=0)
ggplot(only_veggies_ratio_final, aes(x = "", fill=factor(pourcentage_de_gens_kcal*population/100))) +
geom_bar(width = 1) +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: mpg")
ggplot(only_veggies_ratio_final, aes(x = "", fill=factor(pourcentage_de_gens_kcal*population/100))) +
geom_bar(width = 1) +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: mpg")+ coord_polar(theta = "y", start=0)
ggplot(only_veggies_ratio_final, aes(x = "", fill=factor(Year))) +
geom_bar(width = 1) +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: mpg")+ coord_polar(theta = "y", start=0)
ggplot(only_veggies_ratio_final, aes(x = pourcentage_de_gens_kcal*population/100, fill=factor(Year))) +
geom_bar(width = 1) +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: mpg")+ coord_polar(theta = "y", start=0)
runApp()
ggplot(only_veggies_ratio_final, aes(x = "", fill=factor(Year))) +
geom_bar(width = 1) +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: mpg")+ coord_polar(theta = "y", start=0)
ggplot(data = only_veggies_ratio_final ,aes(x = '',y = n,fill = population )) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y=lab.ypos,label = percent(percent,scale = 1)), color = "white")+
theme_void()+
ggtitle('Proportion des céréales pour l’alimentation animale')
ggplot(data = only_veggies_ratio_final ,aes(x = '',fill = population )) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y=lab.ypos,label = percent(percent,scale = 1)), color = "white")+
theme_void()+
ggtitle('Proportion des céréales pour l’alimentation animale')
ggplot(data = only_veggies_ratio_final ,aes(x = '',y=population, fill = population )) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
theme_void()+
ggtitle('Proportion des céréales pour l’alimentation animale')
ggplot(data = only_veggies_ratio_final ,aes(x = population*pourcentage_de_gens_kcal/100,y=population, fill = population )) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
theme_void()+
ggtitle('Proportion des céréales pour l’alimentation animale')
ggplot(data = only_veggies_ratio_final ,aes(x = population*pourcentage_de_gens_kcal/100,y=population )) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
theme_void()+
ggtitle('Proportion des céréales pour l’alimentation animale')
ggplot(data = only_veggies_ratio_final ,aes(x = population*pourcentage_de_gens_kcal/100,y=population, fill = population )) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
theme_void()+
ggtitle('Proportion des céréales pour l’alimentation animale')
ggplot(data = only_veggies_ratio_final ,aes(x = ,y=population, fill = population )) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
theme_void()+
ggtitle('Proportion des céréales pour l’alimentation animale')
ggplot(data = only_veggies_ratio_final ,aes(x ="" ,y=population, fill = population )) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
theme_void()+
ggtitle('Proportion des céréales pour l’alimentation animale')
runApp()
ggplot(data = alimentation_proportion ,aes(x = '',y = n,fill = Element)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y=lab.ypos,label = percent(percent,scale = 1)), color = "white")+
theme_void()+
ggtitle('Proportion des céréales pour l’alimentation animale')
ggplot(data = alimentation_proportion ,aes(x = '',y = n,fill = Element)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y=lab.ypos,label = percent(percent,scale = 1)), color = "white")+
theme_void()+
ggtitle('Proportion des céréales pour l’alimentation animale')
runApp()
alim_proportion()
ggplot(data = alimentation_proportion ,aes(x = '',y = n,fill = Element)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y=lab.ypos,label = percent(percent,scale = 1)), color = "white")+
theme_void()+
ggtitle('Proportion des céréales pour l’alimentation animale')
alimentation_proportion  <<- rbind(animal %>% mutate(origin = 'animal'),vegetal %>% mutate(origin = 'vegetal')) %>%
filter (Element %in% c('Feed','Food')) %>% group_by(Element) %>% summarise(n = sum(Value)) %>%
arrange(desc(n)) %>%
mutate(lab.ypos = cumsum(n) - 0.5*n)
alimentation_proportion  <<- rbind(animal %>% mutate(origin = 'animal'),vegetal %>% mutate(origin = 'vegetal')) %>%
filter (Element %in% c('Feed','Food')) %>% group_by(Element) %>% summarise(n = sum(Value)) %>%
arrange(desc(n)) %>%
mutate(lab.ypos = cumsum(n) - 0.5*n)
alimentation_proportion <<- alimentation_proportion %>% mutate(percent = round((n * 100 )/sum(alimentation_proportion$n),digits=0))
alimentation_proportion
Cereal_consumption <<- pivoted_table %>% filter(is_cereal == TRUE)
feed_sum <- sum(Cereal_consumption$Feed,na.rm = TRUE)
#2.1.2
Cereal_percent <- feed_sum/(sum(Cereal_consumption$Food,na.rm = TRUE)+feed_sum)
View(Cereal_consumption)
vegetal$origin="vegetal"
animal$origin="animal"
All_products <<- rbind(vegetal,animal)
# population mondiale
population_table_tmp <- population[!(population$`Area Code` %in% c(41,96,214,128)),]
population_table <- population_table_tmp %>% select(Area,`Area Code`,Value,Year)
population_table$Value <- population_table$Value*1000
#Country Initialization
countryInit <<- population_table %>% select(Area)
products <<- All_products[,!names(All_products) %in% c("Domain Code","Domain")]
#pivoted = partout !!!!
pivoted_table <<- tidyr::pivot_wider(products,id_cols=c("Area Code","Area","Year","Item Code","Item","origin"),names_from= "Element",values_from = Value)
cereals <<- cereals[,!names(cereals) %in% c("Domain Code","Domain")]
codes <<- cereals %>% distinct(`Item Code`)
#2.1.1 & 2.2.1
pivoted_table <<- pivoted_table %>% mutate(is_cereal = `Item Code` %in% pull(codes))
#2.1.1
Cereal_consumption <<- pivoted_table %>% filter(is_cereal == TRUE)
feed_sum <- sum(Cereal_consumption$Feed,na.rm = TRUE)
#2.1.2
Cereal_percent <- feed_sum/(sum(Cereal_consumption$Food,na.rm = TRUE)+feed_sum)
View(Cereal_consumption)
alim_proportion()
ggplot(data = alimentation_proportion ,aes(x = '',y = percent,fill = Element)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y=lab.ypos,label = percent(percent,scale = 1)), color = "white")+
theme_void()+
ggtitle('Proportion des céréales pour l’alimentation animale')
alim_proportion
ggplot(data = alimentation_proportion ,aes(x = '',y = n,fill = Element)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y=lab.ypos,label = percent(percent,scale = 1)), color = "white")+
theme_void()+
ggtitle('Proportion des céréales pour l’alimentation animale')
Alimentation_proportion[1,2] <- feed_sum
Alimentation_proportion[2,2] <- sum(Cereal_consumption$Food,na.rm = TRUE)
Alimentation_proportion[1,2] <- feed_sum
Alimentation_proportion[2,2] <- sum(Cereal_consumption$Food,na.rm = TRUE)
alimentation_proportion  <<- rbind(animal %>% mutate(origin = 'animal'),vegetal %>% mutate(origin = 'vegetal')) %>%
filter (Element %in% c('Feed','Food')) %>% group_by(Element) %>% summarise(n = sum(Value)) %>%
arrange(desc(n))
alimentation_proportion[1,2] <- feed_sum
alimentation_proportion[2,2] <- sum(Cereal_consumption$Food,na.rm = TRUE)
alimentation_proportion %>% mutate(lab.ypos = cumsum(n) - 0.5*n)
alimentation_proportion <<- alimentation_proportion %>% mutate(percent = round((n * 100 )/sum(alimentation_proportion$n),digits=0))
alimentation_proportion[1,2] <- feed_sum
alimentation_proportion[2,2] <- sum(Cereal_consumption$Food,na.rm = TRUE)
alimentation_proportion <- alimentation_proportion %>% mutate(lab.ypos = cumsum(n) - 0.5*n)
alimentation_proportion <<- alimentation_proportion %>% mutate(percent = round((n * 100 )/sum(alimentation_proportion$n),digits=0))
alimentation_proportion
alim_proportion()
ggplot(data = alimentation_proportion ,aes(x = '',y = n,fill = Element)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y=lab.ypos,label = percent(percent,scale = 1)), color = "white")+
theme_void()+
ggtitle('Proportion des céréales pour l’alimentation animale')
alim_proportion()
ggplot(data = alimentation_proportion ,aes(x = '',y = n,fill = Element)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y=lab.ypos,label = percent(percent,scale = 1)), color = "white")+
theme_void()+
ggtitle('Proportion des céréales pour l’alimentation animale')
alim_proportion <<- function(){
alimentation_proportion  <<- rbind(animal %>% mutate(origin = 'animal'),vegetal %>% mutate(origin = 'vegetal')) %>%
filter (Element %in% c('Feed','Food')) %>% group_by(Element) %>% summarise(n = sum(Value)) %>%
arrange(desc(n))
alimentation_proportion[1,2] <- feed_sum
alimentation_proportion[2,2] <- sum(Cereal_consumption$Food,na.rm = TRUE)
alimentation_proportion <- alimentation_proportion %>% mutate(lab.ypos = cumsum(n) - 0.5*n)
alimentation_proportion <<- alimentation_proportion %>% mutate(percent = round((n * 100 )/sum(alimentation_proportion$n),digits=0))
return(alimentation_proportion)
}
alim_proportion()
ggplot(data = alimentation_proportion ,aes(x = '',y = n,fill = Element)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y=lab.ypos,label = percent(percent,scale = 1)), color = "white")+
theme_void()+
ggtitle('Proportion des céréales pour l’alimentation animale')
runApp()
